# cluster_name=my-cluster

# oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
# echo $oidc_id
# aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
# eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve


# eksctl create iamserviceaccount \
#     --name ebs-csi-controller-sa \
#     --namespace serv-ns \
#     --cluster my-cluster \
#     --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
#     --override-existing-serviceaccounts \
#     --approve \
#     --role-only \
#     --role-name AmazonEKS_EBS_CSI_DriverRole   

# export SERVICE_ACCOUNT_ROLE_ARN=$(aws iam get-role --role-name AmazonEKS_EBS_CSI_DriverRole | jq -r '.Role.Arn') 


# aws eks create-addon --cluster-name my-cluster --addon-name aws-ebs-csi-driver \
#   --service-account-role-arn arn:aws:iam::627562689753:role/AmazonEKS_EBS_CSI_DriverRole



apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-claims
  namespace: se-ns
provisioner: ebs.csi.aws.com
parameters:
  type: gp2
volumeBindingMode: WaitForFirstConsumer


